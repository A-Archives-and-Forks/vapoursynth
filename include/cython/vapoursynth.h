/* Generated by Cython 0.29.21 */

#ifndef __PYX_HAVE__vapoursynth
#define __PYX_HAVE__vapoursynth

struct VPYScriptExport;

/* "vapoursynth.pyx":2536
 * 
 * # for whole script evaluation and export
 * cdef public struct VPYScriptExport:             # <<<<<<<<<<<<<<
 *     void *pyenvdict
 *     void *errstr
 */
struct VPYScriptExport {
  void *pyenvdict;
  void *errstr;
  int id;
};

#ifndef __PYX_HAVE_API__vapoursynth

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C int vpy_createScript(struct VPYScriptExport *);
__PYX_EXTERN_C int vpy_evaluateScript(struct VPYScriptExport *, char const *, char const *, int);
__PYX_EXTERN_C int vpy_evaluateFile(struct VPYScriptExport *, char const *, int);
__PYX_EXTERN_C int vpy4_evaluateBuffer(struct VPYScriptExport *, char const *, char const *, VSMap const *, int);
__PYX_EXTERN_C int vpy4_evaluateFile(struct VPYScriptExport *, char const *, VSMap const *, int);
__PYX_EXTERN_C void vpy4_freeScript(struct VPYScriptExport *);
__PYX_EXTERN_C char *vpy4_getError(struct VPYScriptExport *);
__PYX_EXTERN_C VSNodeRef *vpy4_getOutput(struct VPYScriptExport *, int);
__PYX_EXTERN_C VSNodeRef *vpy4_getAlphaOutput(struct VPYScriptExport *, int);
__PYX_EXTERN_C int vpy_clearOutput(struct VPYScriptExport *, int);
__PYX_EXTERN_C VSCore *vpy4_getCore(struct VPYScriptExport *);
__PYX_EXTERN_C VSAPI const *vpy4_getVSAPI(int);
__PYX_EXTERN_C int vpy_getVariable(struct VPYScriptExport *, char const *, VSMap *);
__PYX_EXTERN_C int vpy_setVariable(struct VPYScriptExport *, VSMap const *);
__PYX_EXTERN_C int vpy_clearVariable(struct VPYScriptExport *, char const *);
__PYX_EXTERN_C void vpy_clearEnvironment(struct VPYScriptExport *);
__PYX_EXTERN_C int vpy4_initVSScript(void);

#endif /* !__PYX_HAVE_API__vapoursynth */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initvapoursynth(void);
#else
PyMODINIT_FUNC PyInit_vapoursynth(void);
#endif

#endif /* !__PYX_HAVE__vapoursynth */
